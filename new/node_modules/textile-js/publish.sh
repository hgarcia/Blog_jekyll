#!/usr/bin/env node

function load_json ( file ) {
  return JSON.parse( require( 'fs' )
                      .readFileSync( file, 'utf8' ) );
}

function exec ( cmd, callback ) {
  require( 'child_process' ).exec( cmd, function ( err, stdout, stderr ) {
    // if ( err != null ) { throw err; }
    callback( err, stdout, stderr );
  });
};

var packg = load_json( 'package.json' )
  , bower = load_json( 'bower.json' )
  , version = packg.version
  ;

// ensure bower and npm versions are the same
if ( bower.version !== version ) {
  console.log('Bower and NPM versions don\'t match');
  process.exit(1);
}

// is tagging needed?
var tagname = 'v' + version;
exec( 'git tag --list ' + tagname, function ( e, o ) {
  if ( e ) { throw e; }

  if ( o.split( '\n' ).filter( Boolean )[ 0 ] ) {
    // already tagged, we're done here
    update_npm();
  }
  else {
    var tag = "git tag -a " + tagname + " -m 'Version " + tagname + "'";
    exec( tag, function ( e, o ) {
      if ( e ) { throw e; }
      // ;;;console.log( 'Created tag ' + tagname );
      // push new tag to github
      exec( 'git push origin ' + tagname, function ( e, o ) {
        if ( e ) { throw e; }
        // ;;;console.log( 'Pushed tag ' + tagname );
        update_npm();
      });
    });
  }
});

// update NPM with latest
function update_npm () {
  var http = require('http');
  http.request({
    'host': 'registry.npmjs.org'
  , 'path': '/' + packg.name
  }, function ( response ) {
    var str = '';
    response
      .on( 'data', function ( d ) { str += d; })
      .on( 'end', function () {
        var npm_info = JSON.parse( str )
          , npm_current = npm_info["dist-tags"].latest
          ;
        if ( npm_current != version ) {
          // latest is not this version - so we can push a new one
          exec( 'npm publish .', function ( e, o ) {
            if ( e ) { throw e; }
          });
        }
      });
  }).end();
}