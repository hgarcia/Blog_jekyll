---
layout: post
title: Working with strings. (Learning Erlang 9)
summary: Strings in Erlang are represented as a list of characters, but don't despair the String module is here to help you with all your string manipulation needs.
categories: [Programming, Erlang]
published: false
---

Yesterday I was asked how you do string manipulation in Erlang, specially since they are nothing else than a list of characters.
I suspected that there should such a think as a string module but I didn't really know so I say as much.

After coming back home I decided to open the Erlang docs and sure enought, the string module is there.

h3. Some basic operations.

<pre><code>
  1> Str = "this is a string".
  "this is a string"
  2> string:len(Str).
  16
  3> length(Str).
  16
</pre></code>

We declare a <span class="code">Str</span> variable and we assign the <span class="code">"This is a string"</span> string. We can easily check for the string lenght using the <span class="code">len/1</span> function.

__Notice that we can call length on Str since it's actually a list.__

We can easily split a string in a list of tokens or build a string from a list of tokens using the <span class="code">tokens/2</span> and the <span class="code">join/2</span> functions. We need to pass the separator to both this functions.

<pre><code>
  6> Tokens = string:tokens(Str, " ").
  ["this","is","a","string"]
  7> string:join(Tokens, " - ").
  "this - is - a - string"
</code></pre>

Notice that <span class="code">token/2</span> will return a list of tokens with the separator removed.

<pre><code>
  8> string:tokens(Str, "i").
  ["th","s ","s a str","ng"]
</code></pre>


h3. Finding and comparing strings.

We can check for a character or a string is included in another string using the <span class="code">chr/2</span> and <span class="code">str/2</span> functions and their reverse versions.

<pre><code>
  10> string:str(Str, "n").
  15
  11> string:str(Str, "p").
  0
  12> string:rstr(Str, "n").
  15
  13> string:rstr(Str, "s").
  11
  14> string:str(Str, "s").
  4
  15> string:chr(Str, 116).
  1
  16> string:rchr(Str, 116).
  12
  17> string:rchr(Str, 11).
  0
</code></pre>
