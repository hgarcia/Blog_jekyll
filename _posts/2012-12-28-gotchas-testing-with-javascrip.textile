---
layout: post
title: Gotchas testing JavaScript and the DOM.
summary: JavaScript is so powerful and maleable that sometimes if you are not careful your Unit test can lie to you.
categories: [JavaScript, Programming]
published: false
---

In reality, your unit test can lie to you in any language, and that is why you want to make sure you see your test fails, hopefully before implementing the feature.

JavaScript and it's dynamic nature can make this even trickier.

Look at the following code:

<pre><code>

    function getAnchor(url, text) {
        var anchor = document.createElement("a");
        anchor.setArgument("href", url);
        anchor.innerHtml = text;
    }

</code></pre>

This code will run and the following test will pass:

<pre><code>

    var element = getAnchor("http://blog.dynamicprogrammer.com", "My site");
    element.innerHtml.should.eql("My site");

</code></pre>

But when you insert the anchor into the DOM of a document this is the HTML that will be rendered.

<pre><code>


</code></pre>

Probably you already notice the problem, is a case problem, the proper name of the property is <span class="code">innerHTML</span> and not innerHtml.

